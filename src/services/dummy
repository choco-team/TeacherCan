빈 폴더 커밋하기 위한 파일, 삭제 요망

services 안에는 각종 API 요청들을 넣는다.

import { api, createMutationService, createQueryService } from '@frontend/toolkit';
import {
  CaseListItemDto,
  CaseType,
  CreateCaseDto,
  CreateCaseResponseDto,
  GetCaseResponseDto,
  GetCasesResponseDto,
  UpdateCaseDto,
} from '@shared/dto';

export const getCaseService = createQueryService<{ caseId: number }, GetCaseResponseDto>(
  ['case', 'detail'],
  ({ caseId }) => api.get(`cases/${caseId}`),
);

export const getCaseListService = createQueryService<never, CaseListItemDto[]>(['case', 'list'], () =>
  api.get<GetCasesResponseDto>(`cases`).then(r => r.list),
);

export const createCaseService = createMutationService<never, CreateCaseDto, CreateCaseResponseDto>(
  ['case', 'detail'],
  () => api.post(`cases`),
);

export const updateCaseService = createMutationService<{ caseId: number }, UpdateCaseDto>(
  ['case', 'detail'],
  ({ caseId }) => api.patch(`cases/${caseId}`),
);

export const updateCaseListService = createMutationService<
  never,
  {
    caseId: number;
    clientName?: string;
    clientPhone?: string;
    seq?: number;
  }[]
>(['case', 'list'], () => api.patch(`cases`));

export const deleteCaseService = createMutationService<{
  caseId: number;
}>(['case', 'detail'], ({ caseId }) => api.delete(`cases/${caseId}`));

export const createInviteClientService = createMutationService<{
  caseId: number;
}>(['caseInviteClient'], ({ caseId }) => api.patch(`cases/${caseId}/inviteClient`));